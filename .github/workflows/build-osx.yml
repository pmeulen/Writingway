# Build executables using pyinstaller
# Script based on https://github.com/NotCookey/Pyinstaller-Github-Actions

name: Build Executables

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    
    env:
      MAIN_PY_FILE: 'main.py'  # path to main.py file

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Install macports to get portaudio
    - name: Setup MacPorts (macOS)
      id: setup-macports
      uses: melusina-org/setup-macports@v1
      with:
        # Specify packages to install
        parameters: '.github/parameters/setup-macports.yaml'
      # Allow the workflow to continue even if this fails
      continue-on-error: true  

    - name: Display MacPorts build log on failure
      if: steps.setup-macports.outcome == 'failure'
      run: |
        echo "=== MacPorts build log ==="
        cat $(port logfile portaudio)
        exit 1
    
    - name: Set up Python
      uses: actions/setup-python@v5
      # Python version is read from .python-version
      # with:
      #  python-version: 3.11.x

    - name: Install Python dependencies using pip
      run: |
        # Install requirements using pip
        # Add macports includes
        export CPPFLAGS="-I/opt/local/include"
        export LDFLAGS="-L/opt/local/lib"

        # universal2 build of portaudio is broken
        # See: https://trac.macports.org/ticket/71481
        # See: https://github.com/PortAudio/portaudio/issues/994
        # export ARCHFLAGS="-arch arm64 -arch x86_64" # Enable universal builds
        export ARCHFLAGS="-arch arm64"

        pip install -r requirements.txt
      working-directory: ./    

    - name: Install PyInstaller
      run: |
        pip install pyinstaller
      working-directory: ./    

    - name: Build executable using pyinstaller
      run: |
        pyinstaller \
        # Disable universal2, defaults to system architecture (ARM)
        # --target-arch=universal2 \
          --hidden-import=pyaudio \
          --collect-all=pyaudio \
          ${{ env.MAIN_PY_FILE }}
      working-directory: ./

    - name: Create Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-arm
        path: dist/

    - name: List files in dist folder
      run: ls -R ./dist/
